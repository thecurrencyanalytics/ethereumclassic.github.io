{"version":3,"sources":["webpack:///./src/components/blogListItem.js","webpack:///./src/components/localeVisibility.js","webpack:///./src/routes/blog.js"],"names":["BlogListItem","post","i18n","key","frontmatter","title","fields","locale","className","date","author","to","parent","relativeDirectory","excerpt","continueReading","LocaleVisibility","children","show","hide","React","useContext","LocaleContext","indexOf","Blog","allMdx","data","pageContext","globals","hasPosts","edges","length","seo","html","intro","text","submitArticle","icon","notLocalized","englishPosts","style","float","latestArticles","noPosts","map","node","query"],"mappings":"6KA2BeA,EAtBM,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,KAC5B,OACE,yBAAKC,IAAQF,EAAKG,YAAYC,MAAtB,IAA+BJ,EAAKK,OAAOC,OAAUC,UAAU,aACrE,4BACE,kBAAC,IAAD,CAAWC,KAAMR,EAAKG,YAAYK,OAClC,mCAAYR,EAAKG,YAAYM,SAE/B,4BACE,kBAAC,IAAD,CAAMC,GAAE,IAAMV,EAAKW,OAAOC,mBAAsBZ,EAAKG,YAAYC,OACjE,8BAEF,6BACMJ,EAAKa,QADX,IAEE,kBAAC,IAAD,CAAMH,GAAE,IAAMV,EAAKW,OAAOC,kBAAqBL,UAAU,aACtDN,EAAKa,gBACN,uBAAGP,UAAU,2B,YCERQ,EAXU,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,SAAUC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,KAClCZ,EAAWa,IAAMC,WAAWC,KAA5Bf,OACR,OAAIW,GAAQA,EAAKK,QAAQhB,KAAY,EAC5BU,EAELE,IAAkC,IAA1BA,EAAKI,QAAQhB,GAChBU,EAEF,M,YCnBT,sCAuCeO,UA9BF,SAAC,GAA0D,IAAhDC,EAA+C,EAAvDC,KAAQD,OAA+C,IAArCE,YAAezB,EAAsB,EAAtBA,KAAM0B,EAAgB,EAAhBA,QAC/CC,EAAmC,IAAxBJ,EAAOK,MAAMC,OAC9B,OACE,kBAAC,IAAD,CAAYC,IAAK9B,GACd+B,YAAK/B,EAAKgC,OACX,kBAAC,IAAD,CACEC,KAAMP,EAAQQ,cACdzB,GAAG,+DACH0B,KAAK,gBAEP,6BACA,kBAAC,EAAD,CAAkBlB,KAAM,CAAC,OACvB,kBAAC,IAAD,CACEmB,cAAY,EACZ3B,GAAG,QACHwB,KAAMP,EAAQW,aACdC,MAAO,CAAEC,MAAO,YAGpB,4BAAKZ,EAAWD,EAAQc,eAAiBd,EAAQe,SACjD,yBAAKnC,UAAU,aACZqB,GACCJ,EAAOK,MAAMc,KAAI,gBAAS3C,EAAT,EAAG4C,KAAH,OACf,kBAAC,EAAD,CAAc3C,KAAM0B,EAAS3B,KAAMA,EAAME,IAAKF,EAAKW,OAAOC,0BAvBtE,IAgCaiC,EAAK","file":"component---src-routes-blog-js-9475767411cc07981a51.js","sourcesContent":["import React from 'react';\n\nimport Link from './link';\nimport Translate from './translate';\n\nconst BlogListItem = ({ post, i18n }) => {\n  return (\n    <div key={`${post.frontmatter.title}-${post.fields.locale}`} className=\"blog-item\">\n      <h4>\n        <Translate date={post.frontmatter.date} />\n        <small>{` ${post.frontmatter.author}`}</small>\n      </h4>\n      <h3>\n        <Link to={`/${post.parent.relativeDirectory}`}>{post.frontmatter.title}</Link>\n        <br />\n      </h3>\n      <div>\n        {`${post.excerpt} `}\n        <Link to={`/${post.parent.relativeDirectory}`} className=\"read-more\">\n          {i18n.continueReading}\n          <i className=\"fas fa-angle-right\" />\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default BlogListItem;\n","import React from 'react';\nimport LocaleContext from '../i18n/localeContext';\n\n/*\n<LocaleVisibility\n  show={['en']} // only shows on default locale\n  hide={['en', 'zh']} // hides default and zh\n>\n</LocaleVisibility>\n*/\n\nconst LocaleVisibility = ({ children, show, hide }) => {\n  const { locale } = React.useContext(LocaleContext);\n  if (show && show.indexOf(locale) >= -1) {\n    return children;\n  }\n  if (hide && hide.indexOf(locale) === -1) {\n    return children;\n  }\n  return null;\n};\n\nexport default LocaleVisibility;\n","import React from 'react';\nimport { graphql } from 'gatsby';\n\nimport html from '../i18n/html';\nimport ButtonLink from '~components/buttonLink';\nimport BlogListItem from '~components/blogListItem';\nimport LocaleVisibility from '~components/localeVisibility';\nimport PageLayout from '~components/pageLayout';\n\nconst Blog = ({ data: { allMdx }, pageContext: { i18n, globals } }) => {\n  const hasPosts = allMdx.edges.length !== 0;\n  return (\n    <PageLayout seo={i18n}>\n      {html(i18n.intro)}\n      <ButtonLink\n        text={globals.submitArticle}\n        to=\"https://github.com/ethereumclassic/ethereumclassic.github.io\"\n        icon=\"angle-right\"\n      />\n      <hr />\n      <LocaleVisibility hide={['en']}>\n        <ButtonLink\n          notLocalized\n          to=\"/blog\"\n          text={globals.englishPosts}\n          style={{ float: 'right' }}\n        />\n      </LocaleVisibility>\n      <h2>{hasPosts ? globals.latestArticles : globals.noPosts}</h2>\n      <div className=\"blog-list\">\n        {hasPosts &&\n          allMdx.edges.map(({ node: post }) => (\n            <BlogListItem i18n={globals} post={post} key={post.parent.relativeDirectory} />\n          ))}\n      </div>\n    </PageLayout>\n  );\n};\n\nexport default Blog;\n\nexport const query = graphql`\n  query Blog($locale: String!) {\n    allMdx(\n      filter: { fields: { locale: { eq: $locale }, parent: { eq: \"blog\" } } }\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      edges {\n        node {\n          excerpt\n          frontmatter {\n            title\n            date\n            author\n          }\n          fields {\n            locale\n          }\n          parent {\n            ... on File {\n              relativeDirectory\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}